name: Build and Push Docker Images
on:
  workflow_dispatch:

env:
  DOCKERHUB_REPO_BACKEND: iot-is-backend
  DOCKERHUB_REPO_FRONTEND: iot-is-frontend
  DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  # =========================
  # Backend (native per-arch)
  # =========================
  build-backend:
    name: Build backend (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            os: ubuntu-latest
            cache_scope: backend-amd64
          - platform: linux/arm64
            os: ubuntu-24.04-arm   # native ARM64 runner
            cache_scope: backend-arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Build a single native arch and push BY DIGEST (no manifest yet)
      - name: Build & push by digest (backend)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./backend/src/Api
          file: ./backend/src/Api/Dockerfile
          platforms: ${{ matrix.platform }}
          tags: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO_BACKEND }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha,scope=${{ matrix.cache_scope }}
          cache-to: type=gha,scope=${{ matrix.cache_scope }},mode=max

      # Save the digest as an artifact so the merge job can create the manifest
      - name: Export digest artifact
        run: |
          mkdir -p "$RUNNER_TEMP/digests"
          digest="${{ steps.build.outputs.digest }}"
          touch "$RUNNER_TEMP/digests/${digest#sha256:}"
      - name: Upload digest (backend)
        uses: actions/upload-artifact@v4
        with:
          name: backend-digests-${{ replace(matrix.platform, '/', '-') }}
          path: ${{ runner.temp }}/digests/*
          retention-days: 1

  # =========================
  # Frontend (native per-arch)
  # =========================
  build-frontend:
    name: Build frontend (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux/amd64
            os: ubuntu-latest
            cache_scope: frontend-amd64
          - platform: linux/arm64
            os: ubuntu-24.04-arm   # native ARM64 runner
            cache_scope: frontend-arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & push by digest (frontend)
        id: build
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          platforms: ${{ matrix.platform }}
          tags: ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO_FRONTEND }}
          outputs: type=image,push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha,scope=${{ matrix.cache_scope }}
          cache-to: type=gha,scope=${{ matrix.cache_scope }},mode=max

      - name: Export digest artifact
        run: |
          mkdir -p "$RUNNER_TEMP/digests"
          digest="${{ steps.build.outputs.digest }}"
          touch "$RUNNER_TEMP/digests/${digest#sha256:}"
      - name: Upload digest (frontend)
        uses: actions/upload-artifact@v4
        with:
          name: frontend-digests-${{ replace(matrix.platform, '/', '-') }}
          path: ${{ runner.temp }}/digests/*
          retention-days: 1

  # =========================
  # Merge manifests (multi-arch)
  # =========================
  merge:
    name: Create & push multi-arch manifests
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Backend manifest
      - name: Download backend digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/backend-digests
          pattern: backend-digests-*
          merge-multiple: true
      - name: Create backend manifest :latest
        working-directory: ${{ runner.temp }}/backend-digests
        run: |
          docker buildx imagetools create \
            -t ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO_BACKEND }}:latest \
            $(printf '${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO_BACKEND }}@sha256:%s ' *)

      # Frontend manifest
      - name: Download frontend digests
        uses: actions/download-artifact@v4
        with:
          path: ${{ runner.temp }}/frontend-digests
          pattern: frontend-digests-*
          merge-multiple: true
      - name: Create frontend manifest :latest
        working-directory: ${{ runner.temp }}/frontend-digests
        run: |
          docker buildx imagetools create \
            -t ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO_FRONTEND }}:latest \
            $(printf '${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO_FRONTEND }}@sha256:%s ' *)

      # Optional: inspect
      - name: Inspect backend image
        run: docker buildx imagetools inspect ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO_BACKEND }}:latest
      - name: Inspect frontend image
        run: docker buildx imagetools inspect ${{ env.DOCKERHUB_USER }}/${{ env.DOCKERHUB_REPO_FRONTEND }}:latest
