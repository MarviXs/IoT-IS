name: iot-is
services:
  backend:
    image: iot-is-backend
    build:
      context: ../backend/src/Api
      dockerfile: Dockerfile
    restart: always
    ports:
      - 8000:8080
      - 8001:5001
  datapoint-background-service:
    image: iot-is-datapoint-background-service
    build:
      context: ../backend/src/DataPointBatchProcessingService
      dockerfile: Dockerfile
    restart: always
  # fronted:
  #   image: iot-is-frontend
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   restart: always
  #   ports:
  #     - 5000:80
  pg:
    image: postgres:16-alpine3.20
    restart: always
    shm_size: 1024mb
    environment:
      POSTGRES_USER: is
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: is_sdg
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    command:
      ["postgres", "-c", "synchronous_commit=off", "-c", "max_connections=200"]
  timescaledb:
    image: timescale/timescaledb-ha:pg16.3-ts2.15.3
    restart: always
    shm_size: 2048mb
    environment:
      POSTGRES_USER: is
      POSTGRES_PASSWORD: ${TIMESCALE_PASSWORD}
      POSTGRES_DB: is_sdg
    ports:
      - 5433:5432
    volumes:
      - timescaledb_data:/home/postgres/pgdata/data
    command:
      ["postgres", "-c", "synchronous_commit=off", "-c", "max_connections=300"]
  emqx:
    restart: always
    environment:
      EMQX_NAME: is_emqx
      EMQX_HOST: ${EMQX_HOST}
    ports:
      - "1883:1883" # MQTT
      - "8083:8083" # MQTT over WebSocket
      - "8883:8883" # MQTT over SSL/TLS
      - "8084:8084" # MQTT over WSS (WebSocket Secure)
      - "18083:18083" # Dashboard
    image: emqx/emqx:5.7.1
    volumes:
      - ./emqx/etc/emqx.conf:/opt/emqx/etc/emqx.conf
      - ./emqx/etc/acl.conf:/opt/emqx/etc/acl.conf
  redis:
    image: redis/redis-stack:7.2.0-v11
    restart: always
    ports:
      - "6379:6379"
  redis-insight:
    image: redis/redisinsight:latest
    restart: always
    ports:
      - "5540:5540"
volumes:
  pgdata:
  timescaledb_data:
