name: iot-is
services:
  caddy:
    image: caddy:latest
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/data:/data
      - ./caddy/config:/config
    environment:
      - FRONTEND_DOMAIN=${FRONTEND_DOMAIN}
      - BACKEND_DOMAIN=${BACKEND_DOMAIN}
      - MQTT_DOMAIN=${MQTT_DOMAIN}
  frontend:
    restart: unless-stopped
    image: iot-is-frontend
    ports:
      - 9000:80
    build:
      context: ../frontend
      args:
        - VITE_API_URL=${API_URL}
  backend:
    image: iot-is-backend
    build:
      context: ../backend/src/Api
      dockerfile: Dockerfile
    restart: unless-stopped
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__PostgresConnection=Host=pg;Port=5432;Database=is_sdg;Username=is;Password=${POSTGRES_PASSWORD}
      - ConnectionStrings__TimescaleConnection=Host=timescaledb;Port=5432;Database=is_sdg;Username=is;Password=${TIMESCALE_PASSWORD}
      - ConnectionStrings__RedisConnection=redis:6379
      - JwtSettings__Secret=${JWT_SECRET}
      - MqttSettings__Host=${EMQX_HOST}
      - MqttSettings__Username=${EMQX_USERNAME}
      - MqttSettings__Password=${EMQX_PASSWORD}
      - RedisSettings__Password=${REDIS_PASSWORD}
      - JwtSettings__ValidIssuer=${BACKEND_DOMAIN}
      - JwtSettings__ValidAudience=${FRONTEND_DOMAIN}
      - Cors__AllowedOrigins=https://${FRONTEND_DOMAIN}
    ports:
      - 5097:5097
      - 5096:5096
  pg:
    image: postgres:16-alpine3.20
    restart: unless-stopped
    shm_size: 256mb
    environment:
      POSTGRES_USER: is
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: is_sdg
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    command:
      ["postgres", "-c", "synchronous_commit=off", "-c", "max_connections=200"]
  timescaledb:
    image: timescale/timescaledb-ha:pg16.4-ts2.16.1
    restart: unless-stopped
    shm_size: 256mb
    environment:
      POSTGRES_USER: is
      POSTGRES_PASSWORD: ${TIMESCALE_PASSWORD}
      POSTGRES_DB: is_sdg
    ports:
      - 5433:5432
    volumes:
      - timescaledb_data:/home/postgres/pgdata/data
    command:
      ["postgres", "-c", "synchronous_commit=off", "-c", "max_connections=300"]
  emqx:
    image: emqx/emqx:5.8.0
    network_mode: "bridge"
    restart: unless-stopped
    ports:
      - "1883:1883" # MQTT
      - "8883:8883" # MQTT over SSL/TLS
      - "18083:18083" # Dashboard
    volumes:
      - ./emqx/cluster.hocon:/opt/emqx/data/configs/cluster.hocon
      - ./emqx/acl.conf:/opt/emqx/etc/acl.conf
      - ./emqx/init_user.json:/opt/emqx/init_user.json
  redis:
    image: redis/redis-stack:7.2.0-v11
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
volumes:
  pgdata:
  timescaledb_data:
