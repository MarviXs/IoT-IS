name: iot-is
services:
  frontend:
    restart: unless-stopped
    image: marvixs/iot-is-frontend
    build:
      context: ../frontend
    environment:
      - API_URL=${API_URL}
      - IOT_ONLY=${IOT_ONLY}
    ports:
      - 9000:80
    networks:
      - out-network
  backend:
    restart: unless-stopped
    image: marvixs/iot-is-backend
    build:
      context: ../backend/src/Api
      dockerfile: Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__PostgresConnection=Host=pg;Port=5432;Database=is_sdg;Username=is;Password=${POSTGRES_PASSWORD}
      - ConnectionStrings__TimescaleConnection=Host=timescaledb;Port=5432;Database=is_sdg;Username=is;Password=${TIMESCALE_PASSWORD}
      - JwtSettings__Secret=${JWT_SECRET}
      - MqttSettings__Enabled=${MQTT_ENABLED}
      - MqttSettings__Host=${EMQX_HOST}
      - MqttSettings__Username=${EMQX_USERNAME}
      - MqttSettings__Password=${EMQX_PASSWORD}
      - RedisSettings__Host=${REDIS_HOST}
      - RedisSettings__Port=${REDIS_PORT}
      - RedisSettings__Password=${REDIS_PASSWORD}
      - JwtSettings__ValidIssuer=${JWT_ISSUER}
      - JwtSettings__ValidAudience=${JWT_AUDIENCE}
      - Cors__AllowedOrigins=${CORS_ALLOWED_ORIGINS}
    ports:
      - 9001:8080
    volumes:
      - backend_firmwares:/app/Fei.Is/firmwares
    networks:
      - int-network
      - out-network
  pg:
    image: postgres:16-alpine3.20
    restart: unless-stopped
    shm_size: 256mb
    environment:
      POSTGRES_USER: is
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: is_sdg
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    command:
      ["postgres", "-c", "synchronous_commit=off", "-c", "max_connections=200"]
    networks:
      - int-network
  timescaledb:
    image: timescale/timescaledb-ha:pg16.10-ts2.22.0
    restart: unless-stopped
    shm_size: 256mb
    environment:
      POSTGRES_USER: is
      POSTGRES_PASSWORD: ${TIMESCALE_PASSWORD}
      POSTGRES_DB: is_sdg
    ports:
      - 5433:5432
    volumes:
      - timescaledb_data:/home/postgres/pgdata/data
    command:
      ["postgres", "-c", "synchronous_commit=off", "-c", "max_connections=300"]
    networks:
      - int-network
  redis:
    image: redis:7.4-alpine3.20
    restart: unless-stopped
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    ports:
      - "6379:6379"
    networks:
      - int-network
volumes:
  pgdata:
  timescaledb_data:
  backend_firmwares:

networks:
  int-network:
  out-network:
